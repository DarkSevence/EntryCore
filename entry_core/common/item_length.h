#pragma once

const BYTE ITEM_SOCKET_REMAIN_SEC = 0;

enum EItemMisc
{
	ITEM_NAME_MAX_LEN = 32,
	ITEM_LIMIT_MAX_NUM = 2,
	ITEM_VALUES_MAX_NUM = 6,
	ITEM_SMALL_DESCR_MAX_LEN = 256,
	ITEM_APPLY_MAX_NUM = 3,
	ITEM_SOCKET_MAX_NUM = 3,
	ITEM_MAX_COUNT = 200,
	ITEM_ATTRIBUTE_MAX_NUM = 7,
	ITEM_ATTRIBUTE_MAX_LEVEL = 5,
	ITEM_AWARD_WHY_MAX_LEN = 50,
	REFINE_MATERIAL_MAX_NUM = 5,
	ITEM_ELK_VNUM = 50026,
};

enum EItemValueIdice
{
	ITEM_VALUE_DRAGON_SOUL_POLL_OUT_BONUS_IDX = 0,
	ITEM_VALUE_CHARGING_AMOUNT_IDX = 0,
	ITEM_VALUE_SECONDARY_COIN_UNIT_IDX = 0,
};

enum EItemDragonSoulSockets
{
	ITEM_SOCKET_DRAGON_SOUL_ACTIVE_IDX = 2,
	ITEM_SOCKET_CHARGING_AMOUNT_IDX = 2,
};

enum EItemUniqueSockets
{
	ITEM_SOCKET_UNIQUE_SAVE_TIME = ITEM_SOCKET_MAX_NUM - 2,
	ITEM_SOCKET_UNIQUE_REMAIN_TIME = ITEM_SOCKET_MAX_NUM - 1
};

enum EItemTypes
{
	ITEM_NONE = 0,
	ITEM_WEAPON = 1,
	ITEM_ARMOR = 2,
	ITEM_USE = 3,
	ITEM_AUTOUSE = 4,
	ITEM_MATERIAL = 5,
	ITEM_SPECIAL = 6,
	ITEM_TOOL = 7,
	ITEM_LOTTERY = 8,
	ITEM_ELK = 9,
	ITEM_METIN = 10,
	ITEM_CONTAINER = 11,
	ITEM_FISH = 12,
	ITEM_ROD = 13,
	ITEM_RESOURCE = 14,
	ITEM_CAMPFIRE = 15,
	ITEM_UNIQUE = 16,
	ITEM_SKILLBOOK = 17,
	ITEM_QUEST = 18,
	ITEM_POLYMORPH = 19,
	ITEM_TREASURE_BOX = 20,
	ITEM_TREASURE_KEY = 21,
	ITEM_SKILLFORGET = 22,
	ITEM_GIFTBOX = 23,
	ITEM_PICK = 24,
	ITEM_HAIR = 25,
	ITEM_TOTEM = 26,
	ITEM_BLEND = 27,
	ITEM_COSTUME = 28,
	ITEM_DS = 29,
	ITEM_SPECIAL_DS = 30,
	ITEM_EXTRACT = 31,
	ITEM_SECONDARY_COIN = 32,
	ITEM_RING = 33,
	ITEM_BELT = 34,
	ITEM_GACHA = 35,
	ITEM_PET = 36,
};

enum EMetinSubTypes
{
	METIN_NORMAL = 0,
	METIN_GOLD = 1,
};

enum EWeaponSubTypes
{
	WEAPON_SWORD = 0,
	WEAPON_DAGGER = 1,
	WEAPON_BOW = 2,
	WEAPON_TWO_HANDED = 3,
	WEAPON_BELL = 4,
	WEAPON_FAN = 5,
	WEAPON_ARROW = 6,
	WEAPON_MOUNT_SPEAR = 7,
	WEAPON_NUM_TYPES = 8,
	WEAPON_NONE = WEAPON_NUM_TYPES + 1,
};

enum EArmorSubTypes
{
	ARMOR_BODY = 0,
	ARMOR_HEAD = 1,
	ARMOR_SHIELD = 2,
	ARMOR_WRIST = 3,
	ARMOR_FOOTS = 4,
	ARMOR_NECK = 5,
	ARMOR_EAR = 6,
	ARMOR_NUM_TYPES = 7,
};

enum ECostumeSubTypes
{
	COSTUME_BODY = 0,
	COSTUME_HAIR = 1,
	COSTUME_MOUNT = 2,
	COSTUME_NUM_TYPES = 3,
};

enum EDragonSoulSubType
{
	DS_SLOT1 = 0,
	DS_SLOT2 = 1,
	DS_SLOT3 = 2,
	DS_SLOT4 = 3,
	DS_SLOT5 = 4,
	DS_SLOT6 = 5,
	DS_SLOT_MAX = 6,
};

enum EDragonSoulGradeTypes
{
	DRAGON_SOUL_GRADE_NORMAL = 0,
	DRAGON_SOUL_GRADE_BRILLIANT = 1,
	DRAGON_SOUL_GRADE_RARE = 2,
	DRAGON_SOUL_GRADE_ANCIENT = 3,
	DRAGON_SOUL_GRADE_LEGENDARY = 4,
	DRAGON_SOUL_GRADE_MAX = 5,
};

enum EDragonSoulStepTypes
{
	DRAGON_SOUL_STEP_LOWEST = 0,
	DRAGON_SOUL_STEP_LOW = 1,
	DRAGON_SOUL_STEP_MID = 2,
	DRAGON_SOUL_STEP_HIGH = 3,
	DRAGON_SOUL_STEP_HIGHEST = 4,
	DRAGON_SOUL_STEP_MAX = 5,
};

#define DRAGON_SOUL_STRENGTH_MAX 7

enum EDSInventoryMaxNum
{
	DRAGON_SOUL_INVENTORY_MAX_NUM = DS_SLOT_MAX * DRAGON_SOUL_GRADE_MAX * DRAGON_SOUL_BOX_SIZE,
};

enum EFishSubTypes
{
	FISH_ALIVE = 0,
	FISH_DEAD = 1,
};

enum EResourceSubTypes
{
	RESOURCE_FISHBONE = 0,
	RESOURCE_WATERSTONEPIECE = 1,
	RESOURCE_WATERSTONE = 2,
	RESOURCE_BLOOD_PEARL = 3,
	RESOURCE_BLUE_PEARL = 4,
	RESOURCE_WHITE_PEARL = 5,
	RESOURCE_BUCKET = 6,
	RESOURCE_CRYSTAL = 7,
	RESOURCE_GEM = 8,
	RESOURCE_STONE = 9,
	RESOURCE_METIN = 10,
	RESOURCE_ORE = 11,
};

enum EUniqueSubTypes
{
	UNIQUE_NONE = 0,
	UNIQUE_BOOK = 1,
	UNIQUE_SPECIAL_RIDE = 2,
	UNIQUE_SPECIAL_MOUNT_RIDE = 3,
};

enum EUseSubTypes
{
	USE_POTION = 0,
	USE_TALISMAN = 1,
	USE_TUNING = 2,
	USE_MOVE = 3,
	USE_TREASURE_BOX = 4,
	USE_MONEYBAG = 5,
	USE_BAIT = 6,
	USE_ABILITY_UP = 7,
	USE_AFFECT = 8,
	USE_CREATE_STONE = 9,
	USE_SPECIAL = 10,
	USE_POTION_NODELAY = 11,
	USE_CLEAR = 12,
	USE_INVISIBILITY = 13,
	USE_DETACHMENT = 14,
	USE_BUCKET = 15,
	USE_POTION_CONTINUE = 16,
	USE_CLEAN_SOCKET = 17,
	USE_CHANGE_ATTRIBUTE = 18,
	USE_ADD_ATTRIBUTE = 19,
	USE_ADD_ACCESSORY_SOCKET = 20,
	USE_PUT_INTO_ACCESSORY_SOCKET = 21,
	USE_ADD_ATTRIBUTE2 = 22,
	USE_RECIPE = 23,
	USE_CHANGE_ATTRIBUTE2 = 24,
	USE_BIND = 25,
	USE_UNBIND = 26,
	USE_TIME_CHARGE_PER = 27,
	USE_TIME_CHARGE_FIX = 28,
	USE_PUT_INTO_BELT_SOCKET = 29,
	USE_PUT_INTO_RING_SOCKET = 30,
};

enum EExtractSubTypes
{
	EXTRACT_DRAGON_SOUL = 0,
	EXTRACT_DRAGON_HEART = 1,
};

enum EAutoUseSubTypes
{
	AUTOUSE_POTION = 0,
	AUTOUSE_ABILITY_UP = 1,
	AUTOUSE_BOMB = 2,
	AUTOUSE_GOLD = 3,
	AUTOUSE_MONEYBAG = 4,
	AUTOUSE_TREASURE_BOX = 5,
};

enum EMaterialSubTypes
{
	MATERIAL_LEATHER = 0,
	MATERIAL_BLOOD = 1,
	MATERIAL_ROOT = 2,
	MATERIAL_NEEDLE = 3,
	MATERIAL_JEWEL = 4,
	MATERIAL_DS_REFINE_NORMAL = 5, 
	MATERIAL_DS_REFINE_BLESSED = 6, 
	MATERIAL_DS_REFINE_HOLLY = 7,
};

enum ESpecialSubTypes
{
	SPECIAL_MAP = 0,
	SPECIAL_KEY = 1,
	SPECIAL_DOC = 2,
	SPECIAL_SPIRIT = 3,
};

enum EToolSubTypes
{
	TOOL_FISHING_ROD = 0,
};

enum ELotterySubTypes
{
	LOTTERY_TICKET = 0,
	LOTTERY_INSTANT = 1
};

enum EItemFlag
{
	ITEM_FLAG_REFINEABLE = (1 << 0),
	ITEM_FLAG_SAVE = (1 << 1),
	ITEM_FLAG_STACKABLE = (1 << 2),	
	ITEM_FLAG_COUNT_PER_1GOLD = (1 << 3),
	ITEM_FLAG_SLOW_QUERY = (1 << 4),
	ITEM_FLAG_UNUSED01 = (1 << 5),
	ITEM_FLAG_UNIQUE = (1 << 6),
	ITEM_FLAG_MAKECOUNT = (1 << 7),
	ITEM_FLAG_IRREMOVABLE = (1 << 8),
	ITEM_FLAG_CONFIRM_WHEN_USE = (1 << 9),
	ITEM_FLAG_QUEST_USE = (1 << 10),
	ITEM_FLAG_QUEST_USE_MULTIPLE = (1 << 11),
	ITEM_FLAG_QUEST_GIVE = (1 << 12),
	ITEM_FLAG_LOG = (1 << 13),
	ITEM_FLAG_APPLICABLE = (1 << 14),
};

enum EItemAntiFlag
{
	ITEM_ANTIFLAG_FEMALE = (1 << 0),
	ITEM_ANTIFLAG_MALE = (1 << 1),
	ITEM_ANTIFLAG_WARRIOR = (1 << 2), 
	ITEM_ANTIFLAG_ASSASSIN = (1 << 3),
	ITEM_ANTIFLAG_SURA = (1 << 4),
	ITEM_ANTIFLAG_SHAMAN = (1 << 5),
	ITEM_ANTIFLAG_GET = (1 << 6),
	ITEM_ANTIFLAG_DROP = (1 << 7),
	ITEM_ANTIFLAG_SELL = (1 << 8),
	ITEM_ANTIFLAG_EMPIRE_A = (1 << 9),
	ITEM_ANTIFLAG_EMPIRE_B = (1 << 10),
	ITEM_ANTIFLAG_EMPIRE_C = (1 << 11),
	ITEM_ANTIFLAG_SAVE = (1 << 12),
	ITEM_ANTIFLAG_GIVE = (1 << 13),
	ITEM_ANTIFLAG_PKDROP = (1 << 14),
	ITEM_ANTIFLAG_STACK = (1 << 15),
	ITEM_ANTIFLAG_MYSHOP = (1 << 16),
	ITEM_ANTIFLAG_SAFEBOX = (1 << 17),
};

enum EItemWearableFlag
{
	WEARABLE_BODY = (1 << 0),
	WEARABLE_HEAD = (1 << 1),
	WEARABLE_FOOTS = (1 << 2),
	WEARABLE_WRIST = (1 << 3),
	WEARABLE_WEAPON	= (1 << 4),
	WEARABLE_NECK = (1 << 5),
	WEARABLE_EAR = (1 << 6),
	WEARABLE_UNIQUE	= (1 << 7),
	WEARABLE_SHIELD = (1 << 8),
	WEARABLE_ARROW = (1 << 9),
	WEARABLE_HAIR = (1 << 10),
	WEARABLE_ABILITY = (1 << 11),
	WEARABLE_COSTUME_BODY = (1 << 12),
};

enum ELimitTypes
{
	LIMIT_NONE = 0,
	LIMIT_LEVEL = 1,
	LIMIT_STR = 2,
	LIMIT_DEX = 3,
	LIMIT_INT = 4,
	LIMIT_CON = 5,
	LIMIT_REAL_TIME = 7,
	LIMIT_REAL_TIME_START_FIRST_USE = 8,
	LIMIT_TIMER_BASED_ON_WEAR = 9,
	LIMIT_MAX_NUM = 10,
};

enum EAttrAddonTypes
{
	ATTR_ADDON_NONE = 0,
	ATTR_DAMAGE_ADDON = -1,
};

enum ERefineType
{
	REFINE_TYPE_NORMAL = 0,
	REFINE_TYPE_NOT_USED1 = 1,
	REFINE_TYPE_SCROLL = 2,
	REFINE_TYPE_HYUNIRON = 3,
	REFINE_TYPE_MONEY_ONLY = 4,
	REFINE_TYPE_MUSIN = 5,
	REFINE_TYPE_BDRAGON = 6,
	REFINE_TYPE_YONGSIN_SCROLL = 7,
};

enum EPetType
{
	PET_PAY = 0,
};